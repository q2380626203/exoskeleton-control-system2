/**
 * @file motor_web_html.h
 * @brief 电机控制网页HTML内容头文件
 */

#ifndef MOTOR_WEB_HTML_H
#define MOTOR_WEB_HTML_H

#ifdef __cplusplus
extern "C" {
#endif

// 电机控制网页HTML内容
static const char motor_control_html[] = "<!DOCTYPE html>"
"<html><head>"
"<meta charset='UTF-8'>"
"<meta name='viewport' content='width=device-width, initial-scale=1.0'>"
"<title>外骨骼电机控制</title>"
"<style>"
"body{font-family:Arial,sans-serif;margin:20px;background-color:#f5f5f5}"
".container{max-width:800px;margin:0 auto;background:#fff;padding:20px;border-radius:10px;box-shadow:0 2px 10px rgba(0,0,0,0.1)}"
"h1{color:#333;text-align:center;margin-bottom:30px}"
".section{margin-bottom:25px;padding:15px;border:1px solid #ddd;border-radius:5px}"
".section h3{color:#555;margin-top:0}"
".control-group{display:flex;gap:10px;margin-bottom:10px;align-items:center}"
".control-group label{min-width:120px;font-weight:bold}"
".control-group input{flex:1;padding:8px;border:1px solid #ccc;border-radius:4px}"
".control-group button{padding:8px 15px;background:#007bff;color:white;border:none;border-radius:4px;cursor:pointer}"
".control-group button:hover{background:#0056b3}"
".motor-status{display:grid;grid-template-columns:1fr 1fr;gap:20px}"
".status-card{padding:15px;background:#f8f9fa;border-radius:5px;border-left:4px solid #007bff}"
".status-item{margin-bottom:5px}"
".btn{padding:10px 20px;margin:5px;border:none;border-radius:5px;cursor:pointer;font-size:14px}"
".btn-primary{background:#007bff;color:white}"
".btn-success{background:#28a745;color:white}"
".btn-danger{background:#dc3545;color:white}"
".btn-warning{background:#ffc107;color:black}"
".btn:hover{opacity:0.8}"
"</style>"
"</head><body>"
"<div class='container'>"
"<h1>🦾 外骨骼电机控制系统</h1>"

"<div class='section'>"
"<h3>📊 电机状态监控</h3>"
"<button onclick='updateStatus()' class='btn btn-primary'>刷新状态</button>"
"<div class='motor-status' id='motorStatus'>加载中...</div>"
"</div>"

"<div class='section'>"
"<h3>🎮 快速控制</h3>"
"<div class='control-group'>"
"<button onclick='startControl()' class='btn btn-success'>启动电机控制</button>"
"<button onclick='stopControl()' class='btn btn-danger'>停止电机控制</button>"
"<button onclick='emergencyStop()' class='btn btn-danger'>紧急停止</button>"
"</div>"
"</div>"

"<div class='section'>"
"<h3>🚶 行走模式</h3>"
"<div class='control-group'>"
"<button onclick='setWalkingMode(0)' class='btn btn-primary'>平地模式</button>"
"<button onclick='setWalkingMode(1)' class='btn btn-warning'>爬楼模式</button>"
"</div>"
"<div class='control-group'>"
"<button onclick='startAlternating()' class='btn btn-success'>启动交替行走</button>"
"<button onclick='stopAlternating()' class='btn btn-danger'>停止交替行走</button>"
"</div>"
"<div class='control-group'>"
"<button onclick='enableMotionDetection()' class='btn btn-success' id='motionDetectionBtn'>启用智能运动检测</button>"
"<span id='motionDetectionStatus' style='margin-left:10px;font-weight:bold;color:#666;'>状态：关闭</span>"
"</div>"
"<div class='control-group'>"
"<button onclick='toggleVelocityTracking()' class='btn btn-success' id='velocityTrackingBtn'>启用速度跟踪模式</button>"
"<span id='velocityTrackingStatus' style='margin-left:10px;font-weight:bold;color:#666;'>状态：关闭</span>"
"</div>"
"<div class='control-group'>"
"<button onclick='resetVelocityTracking()' class='btn btn-warning' id='resetVelocityBtn' disabled>重置节律控制</button>"
"<span style='margin-left:10px;font-size:12px;color:#888;'>重置到等待激活状态</span>"
"</div>"
"</div>"

"<div class='section'>"
"<h3>⚙️ 运控参数设置</h3>"
"<div class='control-group'>"
"<label>电机1位置(rad):</label>"
"<input type='number' id='pos1' step='0.1' value='0'>"
"<label>电机2位置(rad):</label>"
"<input type='number' id='pos2' step='0.1' value='0'>"
"</div>"
"<div class='control-group'>"
"<label>电机1速度(rad/s):</label>"
"<input type='number' id='speed1' step='0.1' value='0'>"
"<label>电机2速度(rad/s):</label>"
"<input type='number' id='speed2' step='0.1' value='0'>"
"</div>"
"<div class='control-group'>"
"<label>电机1力矩(Nm):</label>"
"<input type='number' id='torque1' step='0.1' value='0'>"
"<label>电机2力矩(Nm):</label>"
"<input type='number' id='torque2' step='0.1' value='0'>"
"</div>"
"<div class='control-group'>"
"<label>电机1 Kp:</label>"
"<input type='number' id='kp1' step='0.1' value='0'>"
"<label>电机2 Kp:</label>"
"<input type='number' id='kp2' step='0.1' value='0'>"
"</div>"
"<div class='control-group'>"
"<label>电机1 Kd:</label>"
"<input type='number' id='kd1' step='0.1' value='0'>"
"<label>电机2 Kd:</label>"
"<input type='number' id='kd2' step='0.1' value='0'>"
"</div>"
"<button onclick='updateParams()' class='btn btn-primary'>更新参数</button>"
"</div>"

"<div class='section'>"
"<h3>🔄 交替行走参数</h3>"
"<div class='control-group'>"
"<label>交替间隔(ms):</label>"
"<input type='number' id='interval' value='800'>"
"</div>"
"<div class='control-group'>"
"<label>速度X(rad/s):</label>"
"<input type='number' id='speedX' step='0.1' value='2.25'>"
"<label>速度Y(rad/s):</label>"
"<input type='number' id='speedY' step='0.1' value='1.5'>"
"</div>"
"<div class='control-group'>"
"<label>电流限制(A):</label>"
"<input type='number' id='currentLimit' step='0.1' value='2.0'>"
"</div>"
"<div class='control-group'>"
"<label>前馈力矩(Nm):</label>"
"<input type='number' id='feedforwardTorque' step='0.1' value='0.0'>"
"</div>"
"<button onclick='updateAlternatingParams()' class='btn btn-primary'>更新交替参数</button>"
"</div>"

"<div class='section'>"
"<h3>🧠 智能运动检测参数</h3>"
"<div class='control-group'>"
"<label>爬楼力矩(Nm):</label>"
"<input type='number' id='climbingTorque' step='0.1' value='6.0'>"
"</div>"
"<button onclick='updateMotionDetectionParams()' class='btn btn-primary'>更新智能检测参数</button>"
"</div>"

"<div class='section'>"
"<h3>🎯 速度跟踪模式参数</h3>"
"<div class='control-group'>"
"<label>抬腿力矩(Nm):</label>"
"<input type='number' id='liftTorque' step='0.1' value='6.0'>"
"<label>抬腿速度(rad/s):</label>"
"<input type='number' id='liftSpeed' step='0.1' value='2.75'>"
"</div>"
"<div class='control-group'>"
"<label>放腿力矩(Nm):</label>"
"<input type='number' id='dropTorque' step='0.1' value='-2.0'>"
"<label>放腿速度(rad/s):</label>"
"<input type='number' id='dropSpeed' step='0.1' value='-1.5'>"
"</div>"
"<button onclick='updateVelocityTrackingParams()' class='btn btn-primary'>更新速度跟踪参数</button>"
"</div>"

"</div>"

"<script>"
"function updateStatus(){"
"fetch('/api/status').then(r=>r.json()).then(data=>{"
"document.getElementById('motorStatus').innerHTML="
"'<div class=\"status-card\"><h4>电机1</h4>'"
"+'<div class=\"status-item\">位置: '+data.motor1.position.toFixed(3)+' rad</div>'"
"+'<div class=\"status-item\">速度: '+data.motor1.velocity.toFixed(3)+' rad/s</div>'"
"+'<div class=\"status-item\">电流: '+data.motor1.current.toFixed(3)+' A</div>'"
"+'<div class=\"status-item\">温度: '+data.motor1.temperature.toFixed(1)+' °C</div>'"
"+'</div>'"
"+'<div class=\"status-card\"><h4>电机2</h4>'"
"+'<div class=\"status-item\">位置: '+data.motor2.position.toFixed(3)+' rad</div>'"
"+'<div class=\"status-item\">速度: '+data.motor2.velocity.toFixed(3)+' rad/s</div>'"
"+'<div class=\"status-item\">电流: '+data.motor2.current.toFixed(3)+' A</div>'"
"+'<div class=\"status-item\">温度: '+data.motor2.temperature.toFixed(1)+' °C</div>'"
"+'</div>';"
"const btn=document.getElementById('motionDetectionBtn');"
"const status=document.getElementById('motionDetectionStatus');"
"if(data.motion_detection_enabled){"
"btn.textContent='关闭智能运动检测';"
"btn.className='btn btn-danger';"
"status.textContent='状态：启用';"
"status.style.color='#28a745';"
"}else{"
"btn.textContent='启用智能运动检测';"
"btn.className='btn btn-success';"
"status.textContent='状态：关闭';"
"status.style.color='#666';"
"}"
"const vBtn=document.getElementById('velocityTrackingBtn');"
"const vStatus=document.getElementById('velocityTrackingStatus');"
"const resetBtn=document.getElementById('resetVelocityBtn');"
"if(data.velocity_tracking_enabled){"
"vBtn.textContent='关闭速度跟踪模式';"
"vBtn.className='btn btn-danger';"
"resetBtn.disabled=false;"
"if(data.velocity_tracking_state==='激活'){"
"vStatus.textContent='状态：激活中';"
"vStatus.style.color='#28a745';"
"}else if(data.velocity_tracking_state==='启用'){"
"vStatus.textContent='状态：等待激活';"
"vStatus.style.color='#ffc107';"
"}else{"
"vStatus.textContent='状态：启用';"
"vStatus.style.color='#17a2b8';"
"}"
"}else{"
"vBtn.textContent='启用速度跟踪模式';"
"vBtn.className='btn btn-success';"
"vStatus.textContent='状态：关闭';"
"vStatus.style.color='#666';"
"resetBtn.disabled=true;"
"}"
"if(data.feedforward_torque!==undefined){"
"const feedforwardInput=document.getElementById('feedforwardTorque');"
"if(document.activeElement!==feedforwardInput){"
"feedforwardInput.value=data.feedforward_torque.toFixed(1);"
"}"
"}"
"if(data.climbing_torque!==undefined){"
"const climbingInput=document.getElementById('climbingTorque');"
"if(document.activeElement!==climbingInput){"
"climbingInput.value=data.climbing_torque.toFixed(1);"
"}"
"}"
"if(data.vt_lift_torque!==undefined){"
"const liftTorqueInput=document.getElementById('liftTorque');"
"if(document.activeElement!==liftTorqueInput){"
"liftTorqueInput.value=data.vt_lift_torque.toFixed(1);"
"}"
"}"
"if(data.vt_lift_speed!==undefined){"
"const liftSpeedInput=document.getElementById('liftSpeed');"
"if(document.activeElement!==liftSpeedInput){"
"liftSpeedInput.value=data.vt_lift_speed.toFixed(2);"
"}"
"}"
"if(data.vt_drop_torque!==undefined){"
"const dropTorqueInput=document.getElementById('dropTorque');"
"if(document.activeElement!==dropTorqueInput){"
"dropTorqueInput.value=data.vt_drop_torque.toFixed(1);"
"}"
"}"
"if(data.vt_drop_speed!==undefined){"
"const dropSpeedInput=document.getElementById('dropSpeed');"
"if(document.activeElement!==dropSpeedInput){"
"dropSpeedInput.value=data.vt_drop_speed.toFixed(2);"
"}"
"}"
"}).catch(e=>console.error(e))"
"}"

"function startControl(){"
"fetch('/api/control',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({action:'start'})}).then(r=>r.text()).then(alert)"
"}"

"function stopControl(){"
"fetch('/api/control',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({action:'stop'})}).then(r=>r.text()).then(alert)"
"}"

"function emergencyStop(){"
"fetch('/api/control',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({action:'emergency'})}).then(r=>r.text()).then(alert)"
"}"

"function setWalkingMode(mode){"
"fetch('/api/control',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({action:'mode',mode:mode})}).then(r=>r.text()).then(alert)"
"}"

"function startAlternating(){"
"fetch('/api/control',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({action:'start_alternating'})}).then(r=>r.text()).then(alert)"
"}"

"function stopAlternating(){"
"fetch('/api/control',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({action:'stop_alternating'})}).then(r=>r.text()).then(alert)"
"}"

"function enableMotionDetection(){"
"const btn=document.getElementById('motionDetectionBtn');"
"const status=document.getElementById('motionDetectionStatus');"
"if(btn.textContent==='启用智能运动检测'){"
"fetch('/api/control',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({action:'enable_motion_detection'})}).then(r=>r.text()).then(msg=>{"
"alert(msg);"
"btn.textContent='关闭智能运动检测';"
"btn.className='btn btn-danger';"
"status.textContent='状态：启用';"
"status.style.color='#28a745';"
"})"
"}else{"
"fetch('/api/control',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({action:'disable_motion_detection'})}).then(r=>r.text()).then(msg=>{"
"alert(msg);"
"btn.textContent='启用智能运动检测';"
"btn.className='btn btn-success';"
"status.textContent='状态：关闭';"
"status.style.color='#666';"
"})"
"}"
"}"

"function updateParams(){"
"const params={"
"action:'update_params',"
"motor1:{position:parseFloat(document.getElementById('pos1').value),speed:parseFloat(document.getElementById('speed1').value),torque:parseFloat(document.getElementById('torque1').value),kp:parseFloat(document.getElementById('kp1').value),kd:parseFloat(document.getElementById('kd1').value)},"
"motor2:{position:parseFloat(document.getElementById('pos2').value),speed:parseFloat(document.getElementById('speed2').value),torque:parseFloat(document.getElementById('torque2').value),kp:parseFloat(document.getElementById('kp2').value),kd:parseFloat(document.getElementById('kd2').value)}"
"};"
"fetch('/api/params',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(params)}).then(r=>r.text()).then(alert)"
"}"

"function updateAlternatingParams(){"
"const params={"
"action:'update_alternating',"
"interval:parseInt(document.getElementById('interval').value),"
"speedX:parseFloat(document.getElementById('speedX').value),"
"speedY:parseFloat(document.getElementById('speedY').value),"
"currentLimit:parseFloat(document.getElementById('currentLimit').value),"
"feedforwardTorque:parseFloat(document.getElementById('feedforwardTorque').value)"
"};"
"fetch('/api/params',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(params)}).then(r=>r.text()).then(alert)"
"}"

"function updateMotionDetectionParams(){"
"const params={"
"action:'update_motion_detection',"
"climbingTorque:parseFloat(document.getElementById('climbingTorque').value)"
"};"
"fetch('/api/params',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(params)}).then(r=>r.text()).then(alert)"
"}"

"function updateVelocityTrackingParams(){"
"const params={"
"action:'update_velocity_tracking',"
"liftTorque:parseFloat(document.getElementById('liftTorque').value),"
"liftSpeed:parseFloat(document.getElementById('liftSpeed').value),"
"dropTorque:parseFloat(document.getElementById('dropTorque').value),"
"dropSpeed:parseFloat(document.getElementById('dropSpeed').value)"
"};"
"fetch('/api/params',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(params)}).then(r=>r.text()).then(alert)"
"}"

"function toggleVelocityTracking(){"
"const btn=document.getElementById('velocityTrackingBtn');"
"const status=document.getElementById('velocityTrackingStatus');"
"const resetBtn=document.getElementById('resetVelocityBtn');"
"if(btn.textContent==='启用速度跟踪模式'){"
"fetch('/api/control',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({action:'enable_velocity_tracking'})}).then(r=>r.text()).then(msg=>{"
"alert(msg);"
"btn.textContent='关闭速度跟踪模式';"
"btn.className='btn btn-danger';"
"status.textContent='状态：等待激活';"
"status.style.color='#ffc107';"
"resetBtn.disabled=false;"
"})"
"}else{"
"fetch('/api/control',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({action:'disable_velocity_tracking'})}).then(r=>r.text()).then(msg=>{"
"alert(msg);"
"btn.textContent='启用速度跟踪模式';"
"btn.className='btn btn-success';"
"status.textContent='状态：关闭';"
"status.style.color='#666';"
"resetBtn.disabled=true;"
"})"
"}"
"}"

"function resetVelocityTracking(){"
"if(confirm('确定要重置节律控制到等待激活状态吗？')){"
"fetch('/api/control',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({action:'reset_velocity_tracking'})}).then(r=>r.text()).then(msg=>{"
"alert(msg);"
"const status=document.getElementById('velocityTrackingStatus');"
"status.textContent='状态：等待激活';"
"status.style.color='#ffc107';"
"})"
"}"
"}"

"setInterval(updateStatus,2000);"
"updateStatus();"
"</script>"
"</body></html>";

#ifdef __cplusplus
}
#endif

#endif /* MOTOR_WEB_HTML_H */